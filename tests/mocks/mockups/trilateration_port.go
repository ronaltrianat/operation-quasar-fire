// Code generated by MockGen. DO NOT EDIT.
// Source: src/core/ports/trilateration_port.go

// Package mock_ports is a generated GoMock package.
package mock_ports

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	domain "github.com/ronaltrianat/operation-quasar-fire/src/core/domain"
)

// MockTrilaterationPort is a mock of TrilaterationPort interface.
type MockTrilaterationPort struct {
	ctrl     *gomock.Controller
	recorder *MockTrilaterationPortMockRecorder
}

// MockTrilaterationPortMockRecorder is the mock recorder for MockTrilaterationPort.
type MockTrilaterationPortMockRecorder struct {
	mock *MockTrilaterationPort
}

// NewMockTrilaterationPort creates a new mock instance.
func NewMockTrilaterationPort(ctrl *gomock.Controller) *MockTrilaterationPort {
	mock := &MockTrilaterationPort{ctrl: ctrl}
	mock.recorder = &MockTrilaterationPortMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockTrilaterationPort) EXPECT() *MockTrilaterationPortMockRecorder {
	return m.recorder
}

// TriangulatePosition mocks base method.
func (m *MockTrilaterationPort) TriangulatePosition(data *domain.SatellitesData) (domain.Position, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "TriangulatePosition", data)
	ret0, _ := ret[0].(domain.Position)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// TriangulatePosition indicates an expected call of TriangulatePosition.
func (mr *MockTrilaterationPortMockRecorder) TriangulatePosition(data interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "TriangulatePosition", reflect.TypeOf((*MockTrilaterationPort)(nil).TriangulatePosition), data)
}
